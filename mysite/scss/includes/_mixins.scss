@import "compass";

// easily create a linear gradient without worrying about different prefixes of IE fallback
// NOTE: the IE fallback also applies to modern IE, so make sure you set "filter: none !important;" on IE > 8
// @example: @include simple-gradient(#000, #FFF); // normal gradient
// @example: @include simple-gradient(#000, #FFF, horizontal); // horizontal gradient
// @example: @include simple-gradient(#000, #FFF, vertical, false); // no SVG fallback for IE9
@mixin simple-gradient($start-color, $end-color, $orientation: vertical, $svg-fallback: true) {
	background-color: $start-color;
	@include filter-gradient($start-color, $end-color, $orientation);
	$orientation: if($orientation == vertical, top, left);
	$experimental-support-for-svg: $svg-fallback;
	@include background-image(linear-gradient(top, $start-color 0%, $end-color 100%));
	@include background-clip(padding-box);
}

// creates an RGBa background, and uses filter as fall back for old IE
// @example: @include rgba-background(#000, 0.5);
@mixin rgba-background($color, $opacity) {
	$rgba: rgba($color, $opacity);
	@include filter-gradient($rgba, $rgba, "vertical");
	background: $rgba;
}

// overwrite the compass mixin to include the the IE polyfill
@mixin background-size($size-1: $default-background-size, $size-2: false, $size-3: false, $size-4: false, $size-5: false, $size-6: false, $size-7: false, $size-8: false, $size-9: false, $size-10: false) {
	$size-1: if(type-of($size-1) == string, unquote($size-1), $size-1);
	$sizes: compact($size-1, $size-2, $size-3, $size-4, $size-5, $size-6, $size-7, $size-8, $size-9, $size-10);
	@include experimental(background-size, $sizes, -moz, -webkit, -o, not -ms, not -khtml);
	-ms-behavior: url(/mysite/polyfill/background-size/backgroundsize.min.htc);
}

// set a given image as background with background-size: cover; including IE filter fallback
// @uses image-url()
// @uses overloaded background-size()
// @deprecated this mixin will be removed in future versions
@mixin background-image-scaled($image) {
	background: image-url($image) no-repeat center center;
	@include background-size(cover);
}

// make it easy to include a font via font-face
// @example:
//    // requires this files to exist:
//    // fonts/myFontName/myFontName.ttf
//    // fonts/myFontName/myFontName.eot
//    // fonts/myFontName/myFontName.woff
//    // fonts/myFontName/myFontName.otf
//    // fonts/myFontName/myFontName.svg
//    @include custom-font('myFontName');
// @example:
//    // requires this files to exist:
//    // fonts/folder/myFontFile.ttf
//    // fonts/folder/myFontFile.eot
//    // fonts/folder/myFontFile.woff
//    // fonts/folder/myFontFile.otf
//    // fonts/folder/myFontFile.svg
//    @include custom-font('myFontName', 'folder/myFontFile');
// @example:
//    // requires this files to exist:
//    // fonts/folder/myFontFile.ttf
//    // fonts/folder/myFontFile.eot
//    // fonts/folder/myFontFile.woff
//    // fonts/folder/myFontFile.otf
//    // fonts/folder/myFontFile.svg
//    // fonts/folder/myFontFile-light.ttf
//    // fonts/folder/myFontFile-light.eot
//    // fonts/folder/myFontFile-light.woff
//    // fonts/folder/myFontFile-light.otf
//    // fonts/folder/myFontFile-light.svg
//    // fonts/folder/myFontFile-bold.ttf
//    // fonts/folder/myFontFile-bold.eot
//    // fonts/folder/myFontFile-bold.woff
//    // fonts/folder/myFontFile-bold.otf
//    // fonts/folder/myFontFile-bold.svg
//    @include custom-font('myFontName', 'folder/myFontFile', ('', 'light', 'bold'));
@mixin custom-font($name, $fileName: false, $weightList: false) {
	@if ($fileName == false) {
		$fileName: "#{$name}/#{$name}";
	}
	@if ($weightList == false) {
		$weightList: '';
	}
	@each $weight in $weightList {
		@font-face {
			$file: $fileName;
			@if $weight != '' {
				$file: "#{$fileName}-#{$weight}";
				font-weight: unquote($weight);
			}
			$eot: "#{$file}.eot";
			$ie: unquote("#{$eot}?iefix");
			font-family: quote($name);
			src: font-url($eot);
			src: font-url($ie) unquote("format('eot')"), font-files("#{$file}.ttf", truetype, "#{$file}.woff", woff, "#{$file}.otf", opentype, "#{$file}.svg", svg);
		}
	}
}
